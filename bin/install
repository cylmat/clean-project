#!/usr/bin/env bash

RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
NOCOLOR="\e[0m"

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# HELP #
display_usage() {
    echo "\
Usage:
  [command]
For autocompletion, run 'source install'

  help              h       show list of commands
  list              ls
  [command]         install specific script from '$INSTALL_DIR' directory";
}

####################
### AUTOCOMPLETE ###
####################

# https://askubuntu.com/questions/68175/how-to-create-script-with-auto-complete
_load()
{
  _script_commands=$(bin/install _shortlist)
  local cur
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${_script_commands}" -- ${cur}) )
}
complete -o nospace -F _load bin/install

###############
### INSTALL ###
###############

INSTALL_DIR="${SCRIPT_DIR}/../.recipes"
INSTALL_SCRIPTS=$(find ${INSTALL_DIR} -type f | sort | sed -e 's#^.*.recipes/##g')

if [[ -z "$@" ]]; then
    display_usage
fi

# (for i in "${stringarray[@]}")
for opt in "$@"; do
    case $opt in
        # list
        list|ls)
            echo -e "\n*** List of available scripts in '${YELLOW}$INSTALL_DIR${NOCOLOR}' directory ***"
            echo -e "${BLUE}$INSTALL_SCRIPTS${NOCOLOR}"
            echo ""
        ;;
        # autocompletion
        _shortlist)
            echo ${INSTALL_SCRIPTS}
        ;;
        # help
        help|h|--help)
            display_usage
        ;;
        # default
        *)
            for script in ${INSTALL_SCRIPTS[@]}; do
                if [[ "$opt" == "$script" ]]; then
                    echo ""
                    echo -e "${BLUE}Installing '$script'${NOCOLOR}"
                    sh -c "bash $INSTALL_DIR/$script"
                # else
                    #echo "'$@' not found, skipping it."
                fi
            done
            
        ;;
    esac
done
