#!/usr/bin/env bash

# HELP #
display_usage() {
    echo "\
Usage:
  run [command]
HELP
  help    |h
DOCKER COMPOSE
  build
  upnobuild
  up|start
  down|stop
  reload
  connect|co";
}

##############
### DOCKER ###
##############

ENVMERGED_FILE=/tmp/.envmerged

_merge_dotenv_files() {
  sort .env > ${ENVMERGED_FILE}
  if [[ -f ./.env.local ]]; then
    sort -u -t '=' -k 1,1 .env.local .env > ${ENVMERGED_FILE}
  fi
}

_remove_merged_dotenv() {
  rm ${ENVMERGED_FILE}
}

build_container() {
  _merge_dotenv_files
  docker compose --env-file=${ENVMERGED_FILE} -f docker-compose.yml build
  _remove_merged_dotenv
}

upnobuild_container() {
  docker compose -f docker-compose.yml up -d
}

up_container() {
  _merge_dotenv_files
  docker compose --env-file=${ENVMERGED_FILE} -f docker-compose.yml up -d --build
  _remove_merged_dotenv
}

down_container() {
  docker compose -f docker-compose.yml down --remove-orphans
}

reload_container() {
  ${SHELL} "$0" down
  ${SHELL} "$0" up
}

connect_container() {
	docker exec -it main_server bash
}

if [[ -z "$@" ]]; then
    display_usage
fi

for opt in "$@"; do
  case $opt in
    build)         build_container;;
    upnobuild)     upnobuild_container;;
    up|start)      up_container;;
    down|stop)     down_container;;
    reload)        reload_container;;
    co|connect)    connect_container;;
    help|h|--help) display_usage;;
  esac
done
