#!/usr/bin/env bash

# HELP #
display_usage() {
    echo "\
Usage:
  run [command]
HELP
  help    |h
DOCKER COMPOSE
  build
  upnobuild
  up|start
  down|stop
  reload
  connect|co";
}

##############
### DOCKER ###
##############

COMPOSE_FILE="compose.yml"
ENVMERGED_FILE=/tmp/.envmerged

_merge_dotenv_files() {
  sort .env > ${ENVMERGED_FILE}
  if [[ -f ./.env.local ]]; then
    echo "Creating ${ENVMERGED_FILE}"
    sort -u -t '=' -k 1,1 .env.local .env > ${ENVMERGED_FILE}
  fi

  if [[ -f ./compose.override.yml ]]; then
    COMPOSE_FILE="${COMPOSE_FILE} -f compose.override.yml"
  fi

  if [[ -f ./compose.override.yml.local ]]; then
    COMPOSE_FILE="${COMPOSE_FILE} -f compose.override.yml.local"
  fi
}

_remove_merged_dotenv() {
  if [[ -f ${ENVMERGED_FILE} ]]; then
    echo "Removing ${ENVMERGED_FILE}"
    rm ${ENVMERGED_FILE}
  fi
}

build_container() {
  _merge_dotenv_files
  docker compose --env-file=${ENVMERGED_FILE} -f ${COMPOSE_FILE} build
}

upbuild_container() {
  ${SHELL} "$0" build
  docker compose --env-file=${ENVMERGED_FILE} -f ${COMPOSE_FILE} up -d --force-recreate --build
}

up_container() {
  _merge_dotenv_files
  docker compose --env-file=${ENVMERGED_FILE} -f ${COMPOSE_FILE} up -d --remove-orphans
}

down_container() {
  # --volumes clean attached volumes, so run docker-entrypoint-initdb.d on "up"
  docker compose -f ${COMPOSE_FILE} down --remove-orphans --volumes
}

reload_container() {
  ${SHELL} "$0" down
  ${SHELL} "$0" up
}

connect_container() {
	docker exec -it main_server bash
}

if [[ -z "$@" ]]; then
    display_usage
fi

#######
# RUN #
#######

for opt in "$@"; do
  case $opt in
    build)         build_container;;
    upbuild)       upbuild_container;;
    up|start)      up_container;;
    down|stop)     down_container;;
    reload)        reload_container;;
    co|connect)    connect_container;;
    help|h|--help) display_usage;;
  esac
done
