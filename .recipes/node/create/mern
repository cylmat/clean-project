#!/usr/bin/env bash

# https://dev.to/techcheck/creating-a-react-node-and-express-app-1ieg
# https://medium.com/@jananis20011/mern-stack-full-project-setup-for-beginners-00a8a70ffe19


cd /var/www
mkdir mern-app
cd mern-app


###############
### BACKEND ###
###############

mkdir backend

npm init -y
npm install express express mongoose dotenv cors body-parser
npm install nodemon --save-dev

BACKEND_PORT=3001
FRONTEND_PORT=3000


# express → Handles API requests
# mongoose → Connects to MongoDB
# dotenv → Loads environment variables
# cors → Allows frontend to talk to backend
# body-parser → Parses JSON data
# nodemon → Restarts server automatically when files change


############## .env

echo "
MONGO_URI=mongodb://mongo:27017/mernDB
PORT=$BACKEND_PORT
" > .env

############## server.js

echo <<EOF > server.js
import express from "express";
import dotenv from "dotenv";
import mongoose from "mongoose";
import cors from "cors";

dotenv.config();
const app = express();
const PORT = process.env.PORT || $BACKEND_PORT;

// Middleware
app.use(cors());
app.use(express.json());

// MongoDB Connection
mongoose
  .connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log("MongoDB Connected"))
  .catch((err) => console.log(err));

// Test Route
app.get("/", (req, res) => {
  res.send("API MERN is running...");
});

app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
EOF

############## package.json

curl -s https://webinstall.dev/jq | bash
source ~/.config/envman/PATH.env

jq '.scripts += {"start": "node server.js", "dev": "nodemon server.js"}' package.json > \
    /tmp/package.json && mv /tmp/package.json package.json

jq '.type = "module"' package.json > /tmp/package.json && mv /tmp/package.json package.json

###
# use: NPM RUN DEV
###



################
### FRONTEND ###
################

cd ..
echo 'y' | npx create-react-app frontend
cd frontend
npm install axios react-router-dom

# npm start
# npm run build
# npm test
# npm run eject


############## App.js
mv src/App.js src/App.js.bak

echo <<EOF > src/App.js
import React, { useEffect, useState } from "react";
import axios from "axios";

function App() {
  const [message, setMessage] = useState("");

  useEffect(() => {
    axios.get("http://localhost:$BACKEND_PORT/")
      .then((res) => setMessage(res.data))
      .catch((err) => console.error(err));
  }, []);

  return (
    <div>
      <h1>MERN Stack App</h1>
      <p>{message}</p>
    </div>
  );
}

export default App;
EOF


############## package.json

jq ". += {\"proxy\": \"http://localhost:$BACKEND_PORT\"}" package.json > \
    /tmp/package.json && mv /tmp/package.json package.json

###
# use NPM START
###
