#!/usr/bin/env bash

# https://medium.com/@jananis20011/mern-stack-full-project-setup-for-beginners-00a8a70ffe19


# express → Handles API requests
# mongoose → Connects to MongoDB
# dotenv → Loads environment variables
# cors → Allows frontend to talk to backend
# body-parser → Parses JSON data
# nodemon → Restarts server automatically when files change

cd /var/www
mkdir mern-app
cd mern-app

npm install express express mongoose dotenv cors body-parser
npm install nodemon --save-dev

# npm run dev


################
### ONE FILE ###
################

############## .env

# MONGO_URI=mongodb://localhost:27017/mernDB
# PORT=5000

############## server.js

# import express from "express";
# import dotenv from "dotenv";
# import mongoose from "mongoose";
# import cors from "cors";

# dotenv.config();
# const app = express();
# const PORT = process.env.PORT || 5000;

# // Middleware
# app.use(cors());
# app.use(express.json());

# // MongoDB Connection
# mongoose
#   .connect(process.env.MONGO_URI, { useNewUrlParser: true, useUnifiedTopology: true })
#   .then(() => console.log("MongoDB Connected"))
#   .catch((err) => console.log(err));

# // Test Route
# app.get("/", (req, res) => {
#   res.send("API is running...");
# });

# app.listen(PORT, () => console.log(`Server running on port ${PORT}`));


############## package.json

# "scripts": {
#   "start": "node server.js",
#   "dev": "nodemon server.js"
# }
#
# "type": "module",

##############
